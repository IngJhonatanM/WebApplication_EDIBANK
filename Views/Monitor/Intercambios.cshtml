@using EDIBANK.Models.Monitor
@model MonitorViewModel
@{
    ViewBag.Title = "Intercambios";
}

<h1 class="display-5 fw-bolder text-decoration-underline text-center">@(Model.MostrarEntradas ? "Bandeja de Entradas" : "Bandeja de Salidas")</h1>
<br />
<form asp-area="" asp-controller="Monitor" asp-action="Intercambios" method="get">
    <div class="form-group d-flex flex-row mb-3">
        @if (User.IsInRole("Admin"))
        {
            <label asp-for="EDIActual" class="control-label align-content-center"></label>
            <select asp-for="EDIActual" asp-items="Model.EDIs" class="form-control align-content-center"></select>
        }
        <label asp-for="Desde" class="control-label fw-bold align-content-center">Desde</label>
        <input asp-for="Desde" min="@($"{Model.Menor:yyyy-MM-dd}")" max="@($"{Model.Mayor:yyyy-MM-dd}")" class="form-control align-content-center" />
        <label asp-for="Hasta" class="control-label fw-bold align-content-center">Hasta</label>
        <input asp-for="Hasta" min="@($"{Model.Menor:yyyy-MM-dd}")" max="@($"{Model.Mayor:yyyy-MM-dd}")" class="form-control align-content-center" />
        <input type="submit" name="MostrarEntradas" value="Buscar Entradas" class="btn btn-primary align-content-center" />
        <input type="submit" name="MostrarEntradas" value="Buscar Salidas" class="btn btn-primary align-content-center" />
    </div>
    <div class="form-group d-flex flex-row mb-3">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </div>
</form>
<br />
<table class="table table-secondary table-striped table-hover table-bordered border-dark border-5 caption-top">
    <thead class="table-primary">
        <tr>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().EmisorId)
            </th>
            <th>
                @Html.DisplayNameFor(static string? (MonitorViewModel m) => m.Intercambios.First().ReceptorId)
            </th>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().Numero)
            </th>
            <th>
                @Html.DisplayNameFor(static Status (MonitorViewModel m) => m.Intercambios.First().Status)
            </th>
            <th>
                @Html.DisplayNameFor(static DateTime (MonitorViewModel m) => m.Intercambios.First().Cargado)
            </th>
            <th>
                @Html.DisplayNameFor(static DateTime? (MonitorViewModel m) => m.Intercambios.First().Descargado)
            </th>
            <th>
                @Html.DisplayNameFor(static string (MonitorViewModel m) => m.Intercambios.First().ArchivoIntercambio)
            </th>
            @if (Model.MostrarEntradas)
            {
                <th>
                    Acción
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (Intercambio i in Model.Intercambios)
        {
            <tr>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.Id)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.EmisorId)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string? (MonitorViewModel m) => i.ReceptorId)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.Numero)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(Status (MonitorViewModel m) => i.Status)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(DateTime (MonitorViewModel m) => i.Cargado)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(DateTime? (MonitorViewModel m) => i.Descargado)
                </td>
                <td class="text-nowrap">
                    @Html.DisplayFor(string (MonitorViewModel m) => i.ArchivoIntercambio)
                </td>
                @if (Model.MostrarEntradas)
                {
                    <td class="text-nowrap d-flex justify-content-end">
                        @if (i.Status is Status.DESCARGADO)
                        {
                            string origenId = i.Id;

                            <form asp-area="" asp-controller="Monitor" asp-action="Recargar" method="post">
                                <input asp-for="EDIActual" type="hidden" />
                                <input asp-for="Desde" type="hidden" />
                                <input asp-for="Hasta" type="hidden" />
                                <input asp-for="MostrarEntradas" type="hidden" />
                                <input asp-for="@origenId" type="hidden" />
                                <input type="submit" value="&#x2b8d;" title="Recargar" class="btn btn-primary" />
                            </form>
                        }
                        else
                        {
                            <button title="No disponible" class="btn btn-secondary">&#x2b8d;</button>
                        }
                        &nbsp
                        @if (i.Status is Status.DISPONIBLE)
                        {
                            string origenId = i.Id;

                            <form asp-area="" asp-controller="Monitor" asp-action="Remover" method="post">
                                <input asp-for="EDIActual" type="hidden" />
                                <input asp-for="Desde" type="hidden" />
                                <input asp-for="Hasta" type="hidden" />
                                <input asp-for="MostrarEntradas" type="hidden" />
                                <input asp-for="@origenId" type="hidden" />
                                <input type="submit" value="&times;" title="Remover" class="btn btn-primary" />
                            </form>
                        }
                        else
                        {
                            <button title="No disponible" class="btn btn-secondary">&times;</button>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
